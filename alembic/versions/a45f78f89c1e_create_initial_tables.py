"""create initial tables

Revision ID: a45f78f89c1e
Revises: 
Create Date: 2025-10-20 13:32:49.168040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a45f78f89c1e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alerts',
    sa.Column('alert_id', sa.UUID(), nullable=False),
    sa.Column('payment_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('rule_id', sa.UUID(), nullable=True),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('assigned_to', sa.UUID(), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('resolution_time', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('alert_id')
    )
    op.create_index(op.f('ix_alerts_alert_id'), 'alerts', ['alert_id'], unique=False)
    op.create_index(op.f('ix_alerts_payment_id'), 'alerts', ['payment_id'], unique=False)
    op.create_index(op.f('ix_alerts_rule_id'), 'alerts', ['rule_id'], unique=False)
    op.create_index(op.f('ix_alerts_user_id'), 'alerts', ['user_id'], unique=False)
    op.create_table('fraud_rules',
    sa.Column('rule_id', sa.UUID(), nullable=False),
    sa.Column('rule_name', sa.String(length=100), nullable=False),
    sa.Column('rule_expression', sa.Text(), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('rule_id'),
    sa.UniqueConstraint('rule_name')
    )
    op.create_index(op.f('ix_fraud_rules_rule_id'), 'fraud_rules', ['rule_id'], unique=False)
    op.create_table('merchants',
    sa.Column('merchant_id', sa.UUID(), nullable=False),
    sa.Column('merchant_name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('website_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('merchant_id'),
    sa.UniqueConstraint('merchant_name')
    )
    op.create_index(op.f('ix_merchants_merchant_id'), 'merchants', ['merchant_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('kyc_status', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('log_requests',
    sa.Column('log_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('device_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('request_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_log_requests_log_id'), 'log_requests', ['log_id'], unique=False)
    op.create_index(op.f('ix_log_requests_user_id'), 'log_requests', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('payment_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('merchant_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=False),
    sa.Column('card_type', sa.String(length=20), nullable=True),
    sa.Column('card_last_four', sa.String(length=4), nullable=True),
    sa.Column('transaction_type', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('device_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('fraud_score', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('fraud_flag', sa.Boolean(), nullable=False),
    sa.Column('reason_code', sa.String(length=100), nullable=True),
    sa.Column('risk_level', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.merchant_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_index(op.f('ix_payments_merchant_id'), 'payments', ['merchant_id'], unique=False)
    op.create_index(op.f('ix_payments_payment_id'), 'payments', ['payment_id'], unique=False)
    op.create_index(op.f('ix_payments_user_id'), 'payments', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payments_user_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_merchant_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_log_requests_user_id'), table_name='log_requests')
    op.drop_index(op.f('ix_log_requests_log_id'), table_name='log_requests')
    op.drop_table('log_requests')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_merchants_merchant_id'), table_name='merchants')
    op.drop_table('merchants')
    op.drop_index(op.f('ix_fraud_rules_rule_id'), table_name='fraud_rules')
    op.drop_table('fraud_rules')
    op.drop_index(op.f('ix_alerts_user_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_rule_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_payment_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_alert_id'), table_name='alerts')
    op.drop_table('alerts')
    # ### end Alembic commands ###
