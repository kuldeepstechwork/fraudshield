# fraudshield/docker-compose.yml

services:
  postgres:
    image: postgres:15
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-fraud_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fraudpass}
      POSTGRES_DB: ${POSTGRES_DB:-fraudshield_db}
    ports:
      - '5432:5432' # optional, remove if you don't need host access
    volumes:
      - pgdata:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.1
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  detector:
    image: python:3.11-slim
    container_name: fraudshield_detector
    restart: always
    env_file: .env
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./:/app
    working_dir: /app
    ports:
      - '${API_PORT:-8000}:${API_PORT:-8000}'
    command: /bin/sh -c "pip install --no-cache-dir -r requirements.txt && uvicorn src.services.detector.main:app --host 0.0.0.0 --port ${API_PORT:-8000}"

  consumer:
    image: python:3.11-slim
    container_name: fraudshield_consumer
    restart: always
    env_file: .env
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./:/app
    working_dir: /app
    command: /bin/sh -c "pip install --no-cache-dir -r requirements.txt && python -m src.services.fraud_consumer.main"

volumes:
  pgdata:
    name: fraudshield_pgdata
